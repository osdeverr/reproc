environment:
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      VCVARSALL: C:\"Program Files (x86)"\"Microsoft Visual Studio 14.0"\VC\vcvarsall.bat
      PLATFORM: x64
      CC: cl.exe
      CXX: cl.exe

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      VCVARSALL: C:\"Program Files (x86)"\"Microsoft Visual Studio 14.0"\VC\vcvarsall.bat
      PLATFORM: x86
      CC: clang-cl.exe
      CXX: clang-cl.exe
      # https://gitlab.kitware.com/cmake/cmake/issues/16259
      CFLAGS: -m32
      CXXFLAGS: -m32

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      VCVARSALL: C:\"Program Files (x86)"\"Microsoft Visual Studio"\2017\Community\VC\Auxiliary\Build\vcvarsall.bat
      PLATFORM: x86
      CC: cl.exe
      CXX: cl.exe

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      VCVARSALL: C:\"Program Files (x86)"\"Microsoft Visual Studio"\2017\Community\VC\Auxiliary\Build\vcvarsall.bat
      PLATFORM: x64
      CC: clang-cl.exe
      CXX: clang-cl.exe
      CFLAGS: -m64
      CXXFLAGS: -m64

install:
    # LLVM's (clang-cl) MSBuild integration is outdated so we use Ninja instead
  - ps: iex (new-object net.webclient).downloadstring('https://get.scoop.sh')
  - ps: scoop install ninja

before_build:
  - call %VCVARSALL% %PLATFORM%
  - cmake .
      -G Ninja
      -DBUILD_SHARED_LIBS=ON
      -DCMAKE_BUILD_TYPE=Debug
      -DREPROC_BUILD_TESTS=ON
      -DREPROC_BUILD_EXAMPLES=ON
      -DREPROCXX=ON
      -DREPROC_CI=ON
      -DREPROC_CLANG_TIDY=ON
      -DREPROC_INSTALL=ON
      -DREPROC_CLANG_FORMAT=ON
      -DREPROC_ENABLE_W4=ON
      -DREPROC_COLORED_OUTPUT=ON

build_script: cmake --build .

test_script:
  - cmake --build . --target reproc-run-tests
  - .\examples\git-status >NUL
  - .\examples\cmake-help >NUL
